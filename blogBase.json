{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "Oaert Page", "subTitle": "Why You Try", "avatarUrl": "https://img.picui.cn/free/2024/06/20/6673d27508749.png", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/Go -dan-yuan-ce-shi.html", "labels": ["documentation"], "postTitle": "Go \u5355\u5143\u6d4b\u8bd5", "postUrl": "post/Go%20-dan-yuan-ce-shi.html", "postSourceUrl": "https://github.com/oaert/oaert.github.io/issues/1", "commentNum": 0, "wordCount": 1013, "description": "### go \u5355\u5143\u6d4b\u8bd5gin\u6846\u67b6mock\u8bf7\u6c42\r\n[mock\u8bf7\u6c42\u5b66\u4e60](https://stackoverflow.com/questions/57733801/how-to-set-mock-gin-context-for-bindjson/67034058#67034058)\r\n\r\n#### \u793a\u4f8b\u4ee3\u7801\r\n```go\r\nfunc MockJsonPost(c *gin.Context /* the test context */, content interface{}) {\r\n    c.Request.Method = 'POST' // or PUT\r\n    c.Request.Header.Set('Content-Type', 'application/json')\r\n\r\n    jsonbytes, err := json.Marshal(content)\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n    \r\n    // the request body must be an io.ReadCloser\r\n    // the bytes buffer though doesn't implement io.Closer,\r\n    // so you wrap it in a no-op closer\r\n    c.Request.Body = io.NopCloser(bytes.NewBuffer(jsonbytes))\r\n}\r\n```\r\n```go\r\nfunc TestMyHandler(t *testing.T) {\r\n    w := httptest.NewRecorder()\r\n    ctx, _ := gin.CreateTestContext(w) \r\n\r\n    ctx.Request = &http.Request{\r\n        Header: make(http.Header),\r\n    }\r\n\r\n\r\n    MockJsonPost(ctx, map[string]interface{}{'foo': 'bar'})\r\n    \r\n    MyHandler(ctx)\r\n    assert.EqualValues(t, http.StatusOK, w.Code)\r\n} \r\n```\u3002", "top": 0, "createdAt": 1718870984, "style": "", "script": "", "ogImage": "https://img.picui.cn/free/2024/06/20/6673d27508749.png", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "Oaert Page", "faviconUrl": "https://img.picui.cn/free/2024/06/20/6673d27508749.png", "ogImage": "https://img.picui.cn/free/2024/06/20/6673d27508749.png", "homeUrl": "https://oaert.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}